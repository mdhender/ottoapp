// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: server.sql

package sqlc

import (
	"context"
)

const getServerPaths = `-- name: GetServerPaths :one

SELECT assets_path, components_path, database_path, userdata_path
FROM server
`

type GetServerPathsRow struct {
	AssetsPath     string
	ComponentsPath string
	DatabasePath   string
	UserdataPath   string
}

//	Copyright (c) 2024 Michael D Henderson. All rights reserved.
//
// GetServerPaths returns the paths to the server's assets, components, and user data directories.
func (q *Queries) GetServerPaths(ctx context.Context) (GetServerPathsRow, error) {
	row := q.db.QueryRowContext(ctx, getServerPaths)
	var i GetServerPathsRow
	err := row.Scan(
		&i.AssetsPath,
		&i.ComponentsPath,
		&i.DatabasePath,
		&i.UserdataPath,
	)
	return i, err
}

const setServerAssetsPath = `-- name: SetServerAssetsPath :exec
UPDATE server
SET assets_path = ?1
`

// SetServerAssetsPath sets the path to the assets directory for the server.
func (q *Queries) SetServerAssetsPath(ctx context.Context, path string) error {
	_, err := q.db.ExecContext(ctx, setServerAssetsPath, path)
	return err
}

const setServerComponentsPath = `-- name: SetServerComponentsPath :exec
UPDATE server
SET components_path = ?1
`

// SetServerComponentsPath sets the path to the components directory for the server.
func (q *Queries) SetServerComponentsPath(ctx context.Context, path string) error {
	_, err := q.db.ExecContext(ctx, setServerComponentsPath, path)
	return err
}

const setServerSalt = `-- name: SetServerSalt :exec
UPDATE server
SET salt = ?1
`

// SetServerSalt sets the salt for the server.
func (q *Queries) SetServerSalt(ctx context.Context, salt string) error {
	_, err := q.db.ExecContext(ctx, setServerSalt, salt)
	return err
}
